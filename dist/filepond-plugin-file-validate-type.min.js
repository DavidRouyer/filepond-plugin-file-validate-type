/*
 * FilePondPluginFileValidateType 1.0.1
 * Licensed under MIT, https://opensource.org/licenses/MIT
 * Please visit https://pqina.nl/filepond for details.
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.FilePondPluginFileValidateType=t()}(this,function(){"use strict";var e=function(e){var t=e.addFilter,n=e.utils,i=n.Type,o=n.isString,r=n.guesstimateMimeType,u=n.getExtensionFromFilename,l=n.getFilenameFromURL,a=function(e,t){var n=(/^[^\/]+/.exec(e)||[]).pop(),i=t.slice(0,-2);return n===i},d=function(e,t){return e.some(function(e){return/\*$/.test(e)?a(t,e):e===t})},s=function(e,t){if(0===t.length)return!0;var n="";if(o(e)){var i=l(e),a=u(i);if(!a)return!0;n=r(a)}else n=e.type;return d(t,n)};return t("SET_ATTRIBUTE_TO_OPTION_MAP",function(e){return Object.assign(e,{accept:"acceptedFileTypes"})}),t("LOAD_FILE",function(e,t){var n=t.query;return new Promise(function(t,i){var o=n("GET_ALLOW_FILE_TYPE_VALIDATION");if(!o)return void t(e);var r=n("GET_ACCEPTED_FILE_TYPES");return s(e,r)?void t(e):void i({status:{main:n("GET_LABEL_FILE_TYPE_NOT_ALLOWED"),sub:n("GET_ACCEPTED_FILE_TYPES").join(", ")}})})}),{options:{allowFileTypeValidation:[!0,i.BOOLEAN],acceptedFileTypes:[[],i.ARRAY],labelFileTypeNotAllowed:["File is of invalid type",i.STRING]}}};return document&&document.dispatchEvent(new CustomEvent("FilePond:pluginloaded",{detail:e})),e});