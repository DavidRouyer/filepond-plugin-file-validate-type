/*
 * FilePondPluginFileValidateType 1.1.1
 * Licensed under MIT, https://opensource.org/licenses/MIT
 * Please visit https://pqina.nl/filepond for details.
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.FilePondPluginFileValidateType=t()}(this,function(){"use strict";var e=function(e){var t=e.addFilter,n=e.utils,i=n.Type,r=n.isString,E=n.replaceInString,T=n.guesstimateMimeType,l=n.getExtensionFromFilename,u=n.getFilenameFromURL,o=function(e,t){var n=(/^[^\/]+/.exec(e)||[]).pop(),i=t.slice(0,-2);return n===i},a=function(e,t){return e.some(function(e){return/\*$/.test(e)?o(t,e):e===t})},_=function(e,t){if(0===t.length)return!0;var n="";if(r(e)){var i=u(e),E=l(i);if(!E)return!0;n=T(E)}else n=e.type;return a(t,n)},p=function(e){return function(t){return null!==e[t]&&(e[t]||t)}};return t("SET_ATTRIBUTE_TO_OPTION_MAP",function(e){return Object.assign(e,{accept:"acceptedFileTypes"})}),t("ALLOW_HOPPER_ITEM",function(e,t){var n=t.query;return!n("GET_ALLOW_FILE_TYPE_VALIDATION")||_(e,n("GET_ACCEPTED_FILE_TYPES"))}),t("LOAD_FILE",function(e,t){var n=t.query;return new Promise(function(t,i){if(!n("GET_ALLOW_FILE_TYPE_VALIDATION"))return void t(e);var r=n("GET_ACCEPTED_FILE_TYPES");if(!_(e,r)){var T=r.map(p(n("GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES_MAP"))).filter(function(e){return e!==!1});return void i({status:{main:n("GET_LABEL_FILE_TYPE_NOT_ALLOWED"),sub:E(n("GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES"),{allTypes:T.join(", "),allButLastType:T.slice(0,-1).join(", "),lastType:T[T.length-1]})}})}t(e)})}),{options:{allowFileTypeValidation:[!0,i.BOOLEAN],acceptedFileTypes:[[],i.ARRAY],labelFileTypeNotAllowed:["File is of invalid type",i.STRING],fileValidateTypeLabelExpectedTypes:["Expects {allButLastType} or {lastType}",i.STRING],fileValidateTypeLabelExpectedTypesMap:[{},i.OBJECT]}}};return"undefined"!=typeof navigator&&document&&document.dispatchEvent(new CustomEvent("FilePond:pluginloaded",{detail:e})),e});